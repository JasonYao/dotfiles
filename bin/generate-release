#!/usr/bin/env bash

# Fails on the first error
set -e

##
# Generates a release if this is the master branch
##

##
# Pretty output functions
##

function info () {
    printf "\\t  [\\033[00;34mINFO\\033[0m] %s\\n" "${1}"
}

function user () {
    printf "\\t  [ \\033[0;33m??\\033[0m ] %s\\n" "${1}"
}

function success () {
    printf "\\t\\033[2K  [ \\033[00;32mOK\\033[0m ] %s\\n" "${1}"
}

function warn () {
    printf "\\t\\033[2K  [\\033[38:2:255:165:0mWARN\\033[0m] %s\\n" "${1}"
}

function fail () {
    printf "\\t\\033[2K  [\\033[0;31mFAIL\\033[0m] %s\\n" "${1}"
}

BRANCH_NAME=$1

if [[ "${BRANCH_NAME}" == "source" ]]; then
    info "Release: Master branch detected, updating the version number and generating a new release"
    # Updates the version number, generates a new release, and uploads to github
    npx semantic-release
else
    info "Release: Skipping release generation due to not being on the source branch"
fi
